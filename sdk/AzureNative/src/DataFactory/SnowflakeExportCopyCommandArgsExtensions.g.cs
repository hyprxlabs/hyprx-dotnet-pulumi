// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.DataFactory.Inputs;

namespace Pulumi.AzureNative.DataFactory;

public static partial class SnowflakeExportCopyCommandArgsExtensions
{
    public static global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs WithAdditionalCopyOptions(this global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs @selfRef, global::System.Collections.Generic.Dictionary<string, global::System.Object> additionalCopyOptions)
    {
        @selfRef.AdditionalCopyOptions = additionalCopyOptions;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs WithAdditionalCopyOptions(this global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs @selfRef, global::System.Action<global::System.Collections.Generic.Dictionary<string, global::System.Object>> @configure)
    {
        var @dict = new global::System.Collections.Generic.Dictionary<string, global::System.Object>();
        @configure(@dict);
        @selfRef.AdditionalCopyOptions = @dict;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs WithAdditionalCopyOptions(this global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs @selfRef, global::System.Func<global::System.Collections.Generic.IDictionary<string, global::System.Object>> @create)
    {
        @selfRef.AdditionalCopyOptions = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs WithAdditionalFormatOptions(this global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs @selfRef, global::System.Collections.Generic.Dictionary<string, global::System.Object> additionalFormatOptions)
    {
        @selfRef.AdditionalFormatOptions = additionalFormatOptions;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs WithAdditionalFormatOptions(this global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs @selfRef, global::System.Action<global::System.Collections.Generic.Dictionary<string, global::System.Object>> @configure)
    {
        var @dict = new global::System.Collections.Generic.Dictionary<string, global::System.Object>();
        @configure(@dict);
        @selfRef.AdditionalFormatOptions = @dict;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs WithAdditionalFormatOptions(this global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs @selfRef, global::System.Func<global::System.Collections.Generic.IDictionary<string, global::System.Object>> @create)
    {
        @selfRef.AdditionalFormatOptions = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs WithStorageIntegration(this global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs @selfRef, global::System.Object storageIntegration)
    {
        @selfRef.StorageIntegration = storageIntegration;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs WithStorageIntegration(this global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.StorageIntegration = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs WithType(this global::Pulumi.AzureNative.DataFactory.Inputs.SnowflakeExportCopyCommandArgs @selfRef, global::System.String type)
    {
        @selfRef.Type = type;
        return @selfRef;
    }

}
