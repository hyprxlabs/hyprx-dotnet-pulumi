// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.DataFactory.Inputs;

namespace Pulumi.AzureNative.DataFactory;

public static partial class AzurePostgreSqlSinkArgsExtensions
{
    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithDisableMetricsCollection(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Object disableMetricsCollection)
    {
        @selfRef.DisableMetricsCollection = disableMetricsCollection;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithDisableMetricsCollection(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.DisableMetricsCollection = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithMaxConcurrentConnections(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Object maxConcurrentConnections)
    {
        @selfRef.MaxConcurrentConnections = maxConcurrentConnections;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithMaxConcurrentConnections(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.MaxConcurrentConnections = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithPreCopyScript(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Object preCopyScript)
    {
        @selfRef.PreCopyScript = preCopyScript;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithPreCopyScript(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.PreCopyScript = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithSinkRetryCount(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Object sinkRetryCount)
    {
        @selfRef.SinkRetryCount = sinkRetryCount;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithSinkRetryCount(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.SinkRetryCount = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithSinkRetryWait(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Object sinkRetryWait)
    {
        @selfRef.SinkRetryWait = sinkRetryWait;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithSinkRetryWait(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.SinkRetryWait = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithType(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.String type)
    {
        @selfRef.Type = type;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithUpsertSettings(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkUpsertSettingsArgs upsertSettings)
    {
        @selfRef.UpsertSettings = upsertSettings;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithUpsertSettings(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkUpsertSettingsArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkUpsertSettingsArgs();
        @configure(@item);
        @selfRef.UpsertSettings = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithWriteBatchSize(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Object writeBatchSize)
    {
        @selfRef.WriteBatchSize = writeBatchSize;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithWriteBatchSize(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.WriteBatchSize = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithWriteBatchTimeout(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Object writeBatchTimeout)
    {
        @selfRef.WriteBatchTimeout = writeBatchTimeout;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithWriteBatchTimeout(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.WriteBatchTimeout = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs WithWriteMethod(this global::Pulumi.AzureNative.DataFactory.Inputs.AzurePostgreSqlSinkArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.DataFactory.AzurePostgreSqlWriteMethodEnum> writeMethod)
    {
        @selfRef.WriteMethod = writeMethod;
        return @selfRef;
    }

}
