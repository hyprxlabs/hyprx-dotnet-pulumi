// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.DataFactory.Inputs;

namespace Pulumi.AzureNative.DataFactory;

public static partial class SqlSinkArgsExtensions
{
    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithDisableMetricsCollection(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object disableMetricsCollection)
    {
        @selfRef.DisableMetricsCollection = disableMetricsCollection;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithDisableMetricsCollection(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.DisableMetricsCollection = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithMaxConcurrentConnections(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object maxConcurrentConnections)
    {
        @selfRef.MaxConcurrentConnections = maxConcurrentConnections;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithMaxConcurrentConnections(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.MaxConcurrentConnections = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithPreCopyScript(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object preCopyScript)
    {
        @selfRef.PreCopyScript = preCopyScript;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithPreCopyScript(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.PreCopyScript = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithSinkRetryCount(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object sinkRetryCount)
    {
        @selfRef.SinkRetryCount = sinkRetryCount;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithSinkRetryCount(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.SinkRetryCount = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithSinkRetryWait(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object sinkRetryWait)
    {
        @selfRef.SinkRetryWait = sinkRetryWait;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithSinkRetryWait(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.SinkRetryWait = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithSqlWriterStoredProcedureName(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object sqlWriterStoredProcedureName)
    {
        @selfRef.SqlWriterStoredProcedureName = sqlWriterStoredProcedureName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithSqlWriterStoredProcedureName(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.SqlWriterStoredProcedureName = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithSqlWriterTableType(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object sqlWriterTableType)
    {
        @selfRef.SqlWriterTableType = sqlWriterTableType;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithSqlWriterTableType(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.SqlWriterTableType = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithSqlWriterUseTableLock(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object sqlWriterUseTableLock)
    {
        @selfRef.SqlWriterUseTableLock = sqlWriterUseTableLock;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithSqlWriterUseTableLock(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.SqlWriterUseTableLock = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithStoredProcedureParameters(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object storedProcedureParameters)
    {
        @selfRef.StoredProcedureParameters = storedProcedureParameters;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithStoredProcedureParameters(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.StoredProcedureParameters = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithStoredProcedureTableTypeParameterName(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object storedProcedureTableTypeParameterName)
    {
        @selfRef.StoredProcedureTableTypeParameterName = storedProcedureTableTypeParameterName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithStoredProcedureTableTypeParameterName(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.StoredProcedureTableTypeParameterName = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithTableOption(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object tableOption)
    {
        @selfRef.TableOption = tableOption;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithTableOption(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.TableOption = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithType(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.String type)
    {
        @selfRef.Type = type;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithUpsertSettings(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::Pulumi.AzureNative.DataFactory.Inputs.SqlUpsertSettingsArgs upsertSettings)
    {
        @selfRef.UpsertSettings = upsertSettings;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithUpsertSettings(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.DataFactory.Inputs.SqlUpsertSettingsArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.DataFactory.Inputs.SqlUpsertSettingsArgs();
        @configure(@item);
        @selfRef.UpsertSettings = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithWriteBatchSize(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object writeBatchSize)
    {
        @selfRef.WriteBatchSize = writeBatchSize;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithWriteBatchSize(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.WriteBatchSize = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithWriteBatchTimeout(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object writeBatchTimeout)
    {
        @selfRef.WriteBatchTimeout = writeBatchTimeout;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithWriteBatchTimeout(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.WriteBatchTimeout = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithWriteBehavior(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Object writeBehavior)
    {
        @selfRef.WriteBehavior = writeBehavior;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs WithWriteBehavior(this global::Pulumi.AzureNative.DataFactory.Inputs.SqlSinkArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.WriteBehavior = @item;
        return @selfRef;
    }

}
