// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.Compute.Inputs;

namespace Pulumi.AzureNative.Compute;

public static partial class VirtualMachineExtensionInstanceViewArgsExtensions
{
    public static global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs WithName(this global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs @selfRef, global::System.String name)
    {
        @selfRef.Name = name;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs WithStatuses(this global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.Compute.Inputs.InstanceViewStatusArgs> statuses)
    {
        @selfRef.Statuses = statuses;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs WithStatuses(this global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.Compute.Inputs.InstanceViewStatusArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.Compute.Inputs.InstanceViewStatusArgs>();
        @configure(@list);
        @selfRef.Statuses = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs WithStatuses(this global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.Compute.Inputs.InstanceViewStatusArgs>> @create)
    {
        @selfRef.Statuses = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs WithSubstatuses(this global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.Compute.Inputs.InstanceViewStatusArgs> substatuses)
    {
        @selfRef.Substatuses = substatuses;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs WithSubstatuses(this global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.Compute.Inputs.InstanceViewStatusArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.Compute.Inputs.InstanceViewStatusArgs>();
        @configure(@list);
        @selfRef.Substatuses = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs WithSubstatuses(this global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.Compute.Inputs.InstanceViewStatusArgs>> @create)
    {
        @selfRef.Substatuses = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs WithType(this global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs @selfRef, global::System.String type)
    {
        @selfRef.Type = type;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs WithTypeHandlerVersion(this global::Pulumi.AzureNative.Compute.Inputs.VirtualMachineExtensionInstanceViewArgs @selfRef, global::System.String typeHandlerVersion)
    {
        @selfRef.TypeHandlerVersion = typeHandlerVersion;
        return @selfRef;
    }

}
