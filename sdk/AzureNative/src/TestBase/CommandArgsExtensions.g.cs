// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.TestBase.Inputs;

namespace Pulumi.AzureNative.TestBase;

public static partial class CommandArgsExtensions
{
    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithAction(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.TestBase.Action> action)
    {
        @selfRef.Action = action;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithAlwaysRun(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, bool alwaysRun = true)
    {
        @selfRef.AlwaysRun = alwaysRun;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithApplyUpdateBefore(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, bool applyUpdateBefore = true)
    {
        @selfRef.ApplyUpdateBefore = applyUpdateBefore;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithContent(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, global::System.String content)
    {
        @selfRef.Content = content;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithContentType(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.TestBase.ContentType> contentType)
    {
        @selfRef.ContentType = contentType;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithEnrollIntuneBefore(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, bool enrollIntuneBefore = true)
    {
        @selfRef.EnrollIntuneBefore = enrollIntuneBefore;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithInstall1PAppBefore(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, bool install1PAppBefore = true)
    {
        @selfRef.Install1PAppBefore = install1PAppBefore;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithMaxRunTime(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, global::System.Int32 maxRunTime)
    {
        @selfRef.MaxRunTime = maxRunTime;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithName(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, global::System.String name)
    {
        @selfRef.Name = name;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithPostUpgrade(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, bool postUpgrade = true)
    {
        @selfRef.PostUpgrade = postUpgrade;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithPreUpgrade(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, bool preUpgrade = true)
    {
        @selfRef.PreUpgrade = preUpgrade;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithRestartAfter(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, bool restartAfter = true)
    {
        @selfRef.RestartAfter = restartAfter;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithRunAsInteractive(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, bool runAsInteractive = true)
    {
        @selfRef.RunAsInteractive = runAsInteractive;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs WithRunElevated(this global::Pulumi.AzureNative.TestBase.Inputs.CommandArgs @selfRef, bool runElevated = true)
    {
        @selfRef.RunElevated = runElevated;
        return @selfRef;
    }

}
