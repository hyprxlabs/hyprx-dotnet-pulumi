// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.AzureArcData.Inputs;

namespace Pulumi.AzureNative.AzureArcData;

public static partial class SqlServerInstancePropertiesArgsExtensions
{
    public static global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs WithBackupPolicy(this global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs @selfRef, global::Pulumi.AzureNative.AzureArcData.Inputs.BackupPolicyArgs backupPolicy)
    {
        @selfRef.BackupPolicy = backupPolicy;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs WithBackupPolicy(this global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.AzureArcData.Inputs.BackupPolicyArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.AzureArcData.Inputs.BackupPolicyArgs();
        @configure(@item);
        @selfRef.BackupPolicy = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs WithCores(this global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs @selfRef, global::System.String cores)
    {
        @selfRef.Cores = cores;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs WithEdition(this global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.AzureArcData.EditionType> edition)
    {
        @selfRef.Edition = edition;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs WithHostType(this global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.AzureArcData.HostType> hostType)
    {
        @selfRef.HostType = hostType;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs WithInstanceName(this global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs @selfRef, global::System.String instanceName)
    {
        @selfRef.InstanceName = instanceName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs WithMonitoring(this global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs @selfRef, global::Pulumi.AzureNative.AzureArcData.Inputs.MonitoringArgs monitoring)
    {
        @selfRef.Monitoring = monitoring;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs WithMonitoring(this global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.AzureArcData.Inputs.MonitoringArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.AzureArcData.Inputs.MonitoringArgs();
        @configure(@item);
        @selfRef.Monitoring = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs WithUpgradeLockedUntil(this global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs @selfRef, global::System.String upgradeLockedUntil)
    {
        @selfRef.UpgradeLockedUntil = upgradeLockedUntil;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs WithVersion(this global::Pulumi.AzureNative.AzureArcData.Inputs.SqlServerInstancePropertiesArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.AzureArcData.SqlVersion> version)
    {
        @selfRef.Version = version;
        return @selfRef;
    }

}
