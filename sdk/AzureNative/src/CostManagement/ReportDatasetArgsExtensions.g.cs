// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.CostManagement.Inputs;

namespace Pulumi.AzureNative.CostManagement;

public static partial class ReportDatasetArgsExtensions
{
    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithAggregation(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::System.Collections.Generic.Dictionary<string, global::Pulumi.AzureNative.CostManagement.Inputs.ReportAggregationArgs> aggregation)
    {
        @selfRef.Aggregation = aggregation;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithAggregation(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::System.Action<global::System.Collections.Generic.Dictionary<string, global::Pulumi.AzureNative.CostManagement.Inputs.ReportAggregationArgs>> @configure)
    {
        var @dict = new global::System.Collections.Generic.Dictionary<string, global::Pulumi.AzureNative.CostManagement.Inputs.ReportAggregationArgs>();
        @configure(@dict);
        @selfRef.Aggregation = @dict;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithAggregation(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::System.Func<global::System.Collections.Generic.IDictionary<string, global::Pulumi.AzureNative.CostManagement.Inputs.ReportAggregationArgs>> @create)
    {
        @selfRef.Aggregation = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithConfiguration(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetConfigurationArgs configuration)
    {
        @selfRef.Configuration = configuration;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithConfiguration(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetConfigurationArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetConfigurationArgs();
        @configure(@item);
        @selfRef.Configuration = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithFilter(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::Pulumi.AzureNative.CostManagement.Inputs.ReportFilterArgs filter)
    {
        @selfRef.Filter = filter;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithFilter(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.CostManagement.Inputs.ReportFilterArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.CostManagement.Inputs.ReportFilterArgs();
        @configure(@item);
        @selfRef.Filter = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithGranularity(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.CostManagement.GranularityType> granularity)
    {
        @selfRef.Granularity = granularity;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithGrouping(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.CostManagement.Inputs.ReportGroupingArgs> grouping)
    {
        @selfRef.Grouping = grouping;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithGrouping(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.CostManagement.Inputs.ReportGroupingArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.CostManagement.Inputs.ReportGroupingArgs>();
        @configure(@list);
        @selfRef.Grouping = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs WithGrouping(this global::Pulumi.AzureNative.CostManagement.Inputs.ReportDatasetArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.CostManagement.Inputs.ReportGroupingArgs>> @create)
    {
        @selfRef.Grouping = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

}
