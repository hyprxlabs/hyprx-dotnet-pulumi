// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.Batch.Inputs;

namespace Pulumi.AzureNative.Batch;

public static partial class TaskContainerSettingsArgsExtensions
{
    public static global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs WithContainerHostBatchBindMounts(this global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.Batch.Inputs.ContainerHostBatchBindMountEntryArgs> containerHostBatchBindMounts)
    {
        @selfRef.ContainerHostBatchBindMounts = containerHostBatchBindMounts;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs WithContainerHostBatchBindMounts(this global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.Batch.Inputs.ContainerHostBatchBindMountEntryArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.Batch.Inputs.ContainerHostBatchBindMountEntryArgs>();
        @configure(@list);
        @selfRef.ContainerHostBatchBindMounts = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs WithContainerHostBatchBindMounts(this global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.Batch.Inputs.ContainerHostBatchBindMountEntryArgs>> @create)
    {
        @selfRef.ContainerHostBatchBindMounts = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs WithContainerRunOptions(this global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs @selfRef, global::System.String containerRunOptions)
    {
        @selfRef.ContainerRunOptions = containerRunOptions;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs WithImageName(this global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs @selfRef, global::System.String imageName)
    {
        @selfRef.ImageName = imageName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs WithRegistry(this global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs @selfRef, global::Pulumi.AzureNative.Batch.Inputs.ContainerRegistryArgs registry)
    {
        @selfRef.Registry = registry;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs WithRegistry(this global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.Batch.Inputs.ContainerRegistryArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.Batch.Inputs.ContainerRegistryArgs();
        @configure(@item);
        @selfRef.Registry = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs WithWorkingDirectory(this global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs @selfRef, global::Pulumi.AzureNative.Batch.ContainerWorkingDirectory workingDirectory)
    {
        @selfRef.WorkingDirectory = workingDirectory;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs WithWorkingDirectory(this global::Pulumi.AzureNative.Batch.Inputs.TaskContainerSettingsArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.Batch.ContainerWorkingDirectory> @configure)
    {
        var @item = global::System.Activator.CreateInstance<global::Pulumi.AzureNative.Batch.ContainerWorkingDirectory>();
        @configure(@item);
        @selfRef.WorkingDirectory = @item;
        return @selfRef;
    }

}
