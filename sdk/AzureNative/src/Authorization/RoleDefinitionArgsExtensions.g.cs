// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

namespace Pulumi.AzureNative.Authorization;

public static partial class RoleDefinitionArgsExtensions
{
    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithAssignableScopes(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.Collections.Generic.List<global::System.String> assignableScopes)
    {
        @selfRef.AssignableScopes = assignableScopes;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithAssignableScopes(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::System.String>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::System.String>();
        @configure(@list);
        @selfRef.AssignableScopes = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithAssignableScopes(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::System.String>> @create)
    {
        @selfRef.AssignableScopes = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithDescription(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.String description)
    {
        @selfRef.Description = description;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithPermissions(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.Authorization.Inputs.PermissionArgs> permissions)
    {
        @selfRef.Permissions = permissions;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithPermissions(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.Authorization.Inputs.PermissionArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.Authorization.Inputs.PermissionArgs>();
        @configure(@list);
        @selfRef.Permissions = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithPermissions(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.Authorization.Inputs.PermissionArgs>> @create)
    {
        @selfRef.Permissions = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithRoleDefinitionId(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.String roleDefinitionId)
    {
        @selfRef.RoleDefinitionId = roleDefinitionId;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithRoleName(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.String roleName)
    {
        @selfRef.RoleName = roleName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithRoleType(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.String roleType)
    {
        @selfRef.RoleType = roleType;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs WithScope(this global::Pulumi.AzureNative.Authorization.RoleDefinitionArgs @selfRef, global::System.String scope)
    {
        @selfRef.Scope = scope;
        return @selfRef;
    }

}
