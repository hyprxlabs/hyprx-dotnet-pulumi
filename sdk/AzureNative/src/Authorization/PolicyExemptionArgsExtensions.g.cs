// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

namespace Pulumi.AzureNative.Authorization;

public static partial class PolicyExemptionArgsExtensions
{
    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithAssignmentScopeValidation(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.Authorization.AssignmentScopeValidation> assignmentScopeValidation)
    {
        @selfRef.AssignmentScopeValidation = assignmentScopeValidation;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithDescription(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.String description)
    {
        @selfRef.Description = description;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithDisplayName(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.String displayName)
    {
        @selfRef.DisplayName = displayName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithExemptionCategory(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.Authorization.ExemptionCategory> exemptionCategory)
    {
        @selfRef.ExemptionCategory = exemptionCategory;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithExpiresOn(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.String expiresOn)
    {
        @selfRef.ExpiresOn = expiresOn;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithMetadata(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.Object metadata)
    {
        @selfRef.Metadata = metadata;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithMetadata(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.Action<global::System.Object> @configure)
    {
        var @item = new global::System.Object();
        @configure(@item);
        @selfRef.Metadata = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithPolicyAssignmentId(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.String policyAssignmentId)
    {
        @selfRef.PolicyAssignmentId = policyAssignmentId;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithPolicyDefinitionReferenceIds(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.Collections.Generic.List<global::System.String> policyDefinitionReferenceIds)
    {
        @selfRef.PolicyDefinitionReferenceIds = policyDefinitionReferenceIds;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithPolicyDefinitionReferenceIds(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::System.String>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::System.String>();
        @configure(@list);
        @selfRef.PolicyDefinitionReferenceIds = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithPolicyDefinitionReferenceIds(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::System.String>> @create)
    {
        @selfRef.PolicyDefinitionReferenceIds = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithPolicyExemptionName(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.String policyExemptionName)
    {
        @selfRef.PolicyExemptionName = policyExemptionName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithResourceSelectors(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.Authorization.Inputs.ResourceSelectorArgs> resourceSelectors)
    {
        @selfRef.ResourceSelectors = resourceSelectors;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithResourceSelectors(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.Authorization.Inputs.ResourceSelectorArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.Authorization.Inputs.ResourceSelectorArgs>();
        @configure(@list);
        @selfRef.ResourceSelectors = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithResourceSelectors(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.Authorization.Inputs.ResourceSelectorArgs>> @create)
    {
        @selfRef.ResourceSelectors = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs WithScope(this global::Pulumi.AzureNative.Authorization.PolicyExemptionArgs @selfRef, global::System.String scope)
    {
        @selfRef.Scope = scope;
        return @selfRef;
    }

}
