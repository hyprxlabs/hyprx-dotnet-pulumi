// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.Workloads.Inputs;

namespace Pulumi.AzureNative.Workloads;

public static partial class PrometheusOsProviderInstancePropertiesArgsExtensions
{
    public static global::Pulumi.AzureNative.Workloads.Inputs.PrometheusOsProviderInstancePropertiesArgs WithPrometheusUrl(this global::Pulumi.AzureNative.Workloads.Inputs.PrometheusOsProviderInstancePropertiesArgs @selfRef, global::System.String prometheusUrl)
    {
        @selfRef.PrometheusUrl = prometheusUrl;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Workloads.Inputs.PrometheusOsProviderInstancePropertiesArgs WithProviderType(this global::Pulumi.AzureNative.Workloads.Inputs.PrometheusOsProviderInstancePropertiesArgs @selfRef, global::System.String providerType)
    {
        @selfRef.ProviderType = providerType;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Workloads.Inputs.PrometheusOsProviderInstancePropertiesArgs WithSapSid(this global::Pulumi.AzureNative.Workloads.Inputs.PrometheusOsProviderInstancePropertiesArgs @selfRef, global::System.String sapSid)
    {
        @selfRef.SapSid = sapSid;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Workloads.Inputs.PrometheusOsProviderInstancePropertiesArgs WithSslCertificateUri(this global::Pulumi.AzureNative.Workloads.Inputs.PrometheusOsProviderInstancePropertiesArgs @selfRef, global::System.String sslCertificateUri)
    {
        @selfRef.SslCertificateUri = sslCertificateUri;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Workloads.Inputs.PrometheusOsProviderInstancePropertiesArgs WithSslPreference(this global::Pulumi.AzureNative.Workloads.Inputs.PrometheusOsProviderInstancePropertiesArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.Workloads.SslPreference> sslPreference)
    {
        @selfRef.SslPreference = sslPreference;
        return @selfRef;
    }

}
