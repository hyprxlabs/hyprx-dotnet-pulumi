// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.ApiManagement.Inputs;

namespace Pulumi.AzureNative.ApiManagement;

public static partial class CircuitBreakerRuleArgsExtensions
{
    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerRuleArgs WithAcceptRetryAfter(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerRuleArgs @selfRef, bool acceptRetryAfter = true)
    {
        @selfRef.AcceptRetryAfter = acceptRetryAfter;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerRuleArgs WithFailureCondition(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerRuleArgs @selfRef, global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs failureCondition)
    {
        @selfRef.FailureCondition = failureCondition;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerRuleArgs WithFailureCondition(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerRuleArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs();
        @configure(@item);
        @selfRef.FailureCondition = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerRuleArgs WithName(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerRuleArgs @selfRef, global::System.String name)
    {
        @selfRef.Name = name;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerRuleArgs WithTripDuration(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerRuleArgs @selfRef, global::System.String tripDuration)
    {
        @selfRef.TripDuration = tripDuration;
        return @selfRef;
    }

}
