// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.ApiManagement.Inputs;

namespace Pulumi.AzureNative.ApiManagement;

public static partial class CircuitBreakerFailureConditionArgsExtensions
{
    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs WithCount(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs @selfRef, global::System.Double count)
    {
        @selfRef.Count = count;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs WithErrorReasons(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs @selfRef, global::System.Collections.Generic.List<global::System.String> errorReasons)
    {
        @selfRef.ErrorReasons = errorReasons;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs WithErrorReasons(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::System.String>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::System.String>();
        @configure(@list);
        @selfRef.ErrorReasons = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs WithErrorReasons(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::System.String>> @create)
    {
        @selfRef.ErrorReasons = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs WithInterval(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs @selfRef, global::System.String interval)
    {
        @selfRef.Interval = interval;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs WithPercentage(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs @selfRef, global::System.Double percentage)
    {
        @selfRef.Percentage = percentage;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs WithStatusCodeRanges(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.ApiManagement.Inputs.FailureStatusCodeRangeArgs> statusCodeRanges)
    {
        @selfRef.StatusCodeRanges = statusCodeRanges;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs WithStatusCodeRanges(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.ApiManagement.Inputs.FailureStatusCodeRangeArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.ApiManagement.Inputs.FailureStatusCodeRangeArgs>();
        @configure(@list);
        @selfRef.StatusCodeRanges = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs WithStatusCodeRanges(this global::Pulumi.AzureNative.ApiManagement.Inputs.CircuitBreakerFailureConditionArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.ApiManagement.Inputs.FailureStatusCodeRangeArgs>> @create)
    {
        @selfRef.StatusCodeRanges = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

}
