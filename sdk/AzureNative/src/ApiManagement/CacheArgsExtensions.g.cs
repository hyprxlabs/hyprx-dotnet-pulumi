// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

namespace Pulumi.AzureNative.ApiManagement;

public static partial class CacheArgsExtensions
{
    public static global::Pulumi.AzureNative.ApiManagement.CacheArgs WithCacheId(this global::Pulumi.AzureNative.ApiManagement.CacheArgs @selfRef, global::System.String cacheId)
    {
        @selfRef.CacheId = cacheId;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.CacheArgs WithConnectionString(this global::Pulumi.AzureNative.ApiManagement.CacheArgs @selfRef, global::System.String connectionString)
    {
        @selfRef.ConnectionString = connectionString;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.CacheArgs WithDescription(this global::Pulumi.AzureNative.ApiManagement.CacheArgs @selfRef, global::System.String description)
    {
        @selfRef.Description = description;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.CacheArgs WithResourceGroupName(this global::Pulumi.AzureNative.ApiManagement.CacheArgs @selfRef, global::System.String resourceGroupName)
    {
        @selfRef.ResourceGroupName = resourceGroupName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.CacheArgs WithResourceId(this global::Pulumi.AzureNative.ApiManagement.CacheArgs @selfRef, global::System.String resourceId)
    {
        @selfRef.ResourceId = resourceId;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.CacheArgs WithServiceName(this global::Pulumi.AzureNative.ApiManagement.CacheArgs @selfRef, global::System.String serviceName)
    {
        @selfRef.ServiceName = serviceName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ApiManagement.CacheArgs WithUseFromLocation(this global::Pulumi.AzureNative.ApiManagement.CacheArgs @selfRef, global::System.String useFromLocation)
    {
        @selfRef.UseFromLocation = useFromLocation;
        return @selfRef;
    }

}
