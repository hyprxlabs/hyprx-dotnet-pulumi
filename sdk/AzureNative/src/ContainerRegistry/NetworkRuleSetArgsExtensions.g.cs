// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.ContainerRegistry.Inputs;

namespace Pulumi.AzureNative.ContainerRegistry;

public static partial class NetworkRuleSetArgsExtensions
{
    public static global::Pulumi.AzureNative.ContainerRegistry.Inputs.NetworkRuleSetArgs WithDefaultAction(this global::Pulumi.AzureNative.ContainerRegistry.Inputs.NetworkRuleSetArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.ContainerRegistry.DefaultAction> defaultAction)
    {
        @selfRef.DefaultAction = defaultAction;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ContainerRegistry.Inputs.NetworkRuleSetArgs WithIpRules(this global::Pulumi.AzureNative.ContainerRegistry.Inputs.NetworkRuleSetArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.ContainerRegistry.Inputs.IPRuleArgs> ipRules)
    {
        @selfRef.IpRules = ipRules;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ContainerRegistry.Inputs.NetworkRuleSetArgs WithIpRules(this global::Pulumi.AzureNative.ContainerRegistry.Inputs.NetworkRuleSetArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.ContainerRegistry.Inputs.IPRuleArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.ContainerRegistry.Inputs.IPRuleArgs>();
        @configure(@list);
        @selfRef.IpRules = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ContainerRegistry.Inputs.NetworkRuleSetArgs WithIpRules(this global::Pulumi.AzureNative.ContainerRegistry.Inputs.NetworkRuleSetArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.ContainerRegistry.Inputs.IPRuleArgs>> @create)
    {
        @selfRef.IpRules = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

}
