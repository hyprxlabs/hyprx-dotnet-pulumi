// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.Security.Inputs;

namespace Pulumi.AzureNative.Security;

public static partial class DenylistCustomAlertRuleArgsExtensions
{
    public static global::Pulumi.AzureNative.Security.Inputs.DenylistCustomAlertRuleArgs WithDenylistValues(this global::Pulumi.AzureNative.Security.Inputs.DenylistCustomAlertRuleArgs @selfRef, global::System.Collections.Generic.List<global::System.String> denylistValues)
    {
        @selfRef.DenylistValues = denylistValues;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Security.Inputs.DenylistCustomAlertRuleArgs WithDenylistValues(this global::Pulumi.AzureNative.Security.Inputs.DenylistCustomAlertRuleArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::System.String>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::System.String>();
        @configure(@list);
        @selfRef.DenylistValues = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Security.Inputs.DenylistCustomAlertRuleArgs WithDenylistValues(this global::Pulumi.AzureNative.Security.Inputs.DenylistCustomAlertRuleArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::System.String>> @create)
    {
        @selfRef.DenylistValues = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Security.Inputs.DenylistCustomAlertRuleArgs WithIsEnabled(this global::Pulumi.AzureNative.Security.Inputs.DenylistCustomAlertRuleArgs @selfRef, bool isEnabled = true)
    {
        @selfRef.IsEnabled = isEnabled;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Security.Inputs.DenylistCustomAlertRuleArgs WithRuleType(this global::Pulumi.AzureNative.Security.Inputs.DenylistCustomAlertRuleArgs @selfRef, global::System.String ruleType)
    {
        @selfRef.RuleType = ruleType;
        return @selfRef;
    }

}
