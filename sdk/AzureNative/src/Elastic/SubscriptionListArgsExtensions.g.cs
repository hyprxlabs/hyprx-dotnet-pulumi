// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.Elastic.Inputs;

namespace Pulumi.AzureNative.Elastic;

public static partial class SubscriptionListArgsExtensions
{
    public static global::Pulumi.AzureNative.Elastic.Inputs.SubscriptionListArgs WithMonitoredSubscriptionList(this global::Pulumi.AzureNative.Elastic.Inputs.SubscriptionListArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.Elastic.Inputs.MonitoredSubscriptionArgs> monitoredSubscriptionList)
    {
        @selfRef.MonitoredSubscriptionList = monitoredSubscriptionList;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Elastic.Inputs.SubscriptionListArgs WithMonitoredSubscriptionList(this global::Pulumi.AzureNative.Elastic.Inputs.SubscriptionListArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.Elastic.Inputs.MonitoredSubscriptionArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.Elastic.Inputs.MonitoredSubscriptionArgs>();
        @configure(@list);
        @selfRef.MonitoredSubscriptionList = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Elastic.Inputs.SubscriptionListArgs WithMonitoredSubscriptionList(this global::Pulumi.AzureNative.Elastic.Inputs.SubscriptionListArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.Elastic.Inputs.MonitoredSubscriptionArgs>> @create)
    {
        @selfRef.MonitoredSubscriptionList = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Elastic.Inputs.SubscriptionListArgs WithOperation(this global::Pulumi.AzureNative.Elastic.Inputs.SubscriptionListArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.Elastic.Operation> operation)
    {
        @selfRef.Operation = operation;
        return @selfRef;
    }

}
