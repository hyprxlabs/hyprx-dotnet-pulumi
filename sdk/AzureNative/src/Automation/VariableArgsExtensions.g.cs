// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

namespace Pulumi.AzureNative.Automation;

public static partial class VariableArgsExtensions
{
    public static global::Pulumi.AzureNative.Automation.VariableArgs WithAutomationAccountName(this global::Pulumi.AzureNative.Automation.VariableArgs @selfRef, global::System.String automationAccountName)
    {
        @selfRef.AutomationAccountName = automationAccountName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Automation.VariableArgs WithDescription(this global::Pulumi.AzureNative.Automation.VariableArgs @selfRef, global::System.String description)
    {
        @selfRef.Description = description;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Automation.VariableArgs WithIsEncrypted(this global::Pulumi.AzureNative.Automation.VariableArgs @selfRef, bool isEncrypted = true)
    {
        @selfRef.IsEncrypted = isEncrypted;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Automation.VariableArgs WithName(this global::Pulumi.AzureNative.Automation.VariableArgs @selfRef, global::System.String name)
    {
        @selfRef.Name = name;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Automation.VariableArgs WithResourceGroupName(this global::Pulumi.AzureNative.Automation.VariableArgs @selfRef, global::System.String resourceGroupName)
    {
        @selfRef.ResourceGroupName = resourceGroupName;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Automation.VariableArgs WithValue(this global::Pulumi.AzureNative.Automation.VariableArgs @selfRef, global::System.String value)
    {
        @selfRef.Value = value;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.Automation.VariableArgs WithVariableName(this global::Pulumi.AzureNative.Automation.VariableArgs @selfRef, global::System.String variableName)
    {
        @selfRef.VariableName = variableName;
        return @selfRef;
    }

}
