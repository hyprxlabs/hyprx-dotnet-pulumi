// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.ServiceFabric.Inputs;

namespace Pulumi.AzureNative.ServiceFabric;

public static partial class ApplicationUpgradePolicyArgsExtensions
{
    public static global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs WithApplicationHealthPolicy(this global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs @selfRef, global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationHealthPolicyArgs applicationHealthPolicy)
    {
        @selfRef.ApplicationHealthPolicy = applicationHealthPolicy;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs WithApplicationHealthPolicy(this global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationHealthPolicyArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationHealthPolicyArgs();
        @configure(@item);
        @selfRef.ApplicationHealthPolicy = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs WithForceRestart(this global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs @selfRef, bool forceRestart = true)
    {
        @selfRef.ForceRestart = forceRestart;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs WithInstanceCloseDelayDuration(this global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs @selfRef, global::System.Double instanceCloseDelayDuration)
    {
        @selfRef.InstanceCloseDelayDuration = instanceCloseDelayDuration;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs WithRecreateApplication(this global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs @selfRef, bool recreateApplication = true)
    {
        @selfRef.RecreateApplication = recreateApplication;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs WithRollingUpgradeMonitoringPolicy(this global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs @selfRef, global::Pulumi.AzureNative.ServiceFabric.Inputs.RollingUpgradeMonitoringPolicyArgs rollingUpgradeMonitoringPolicy)
    {
        @selfRef.RollingUpgradeMonitoringPolicy = rollingUpgradeMonitoringPolicy;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs WithRollingUpgradeMonitoringPolicy(this global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.ServiceFabric.Inputs.RollingUpgradeMonitoringPolicyArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.ServiceFabric.Inputs.RollingUpgradeMonitoringPolicyArgs();
        @configure(@item);
        @selfRef.RollingUpgradeMonitoringPolicy = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs WithUpgradeMode(this global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.ServiceFabric.RollingUpgradeMode> upgradeMode)
    {
        @selfRef.UpgradeMode = upgradeMode;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs WithUpgradeReplicaSetCheckTimeout(this global::Pulumi.AzureNative.ServiceFabric.Inputs.ApplicationUpgradePolicyArgs @selfRef, global::System.Double upgradeReplicaSetCheckTimeout)
    {
        @selfRef.UpgradeReplicaSetCheckTimeout = upgradeReplicaSetCheckTimeout;
        return @selfRef;
    }

}
