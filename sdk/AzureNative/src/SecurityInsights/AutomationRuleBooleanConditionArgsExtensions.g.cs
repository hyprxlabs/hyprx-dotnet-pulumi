// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.SecurityInsights.Inputs;

namespace Pulumi.AzureNative.SecurityInsights;

public static partial class AutomationRuleBooleanConditionArgsExtensions
{
    public static global::Pulumi.AzureNative.SecurityInsights.Inputs.AutomationRuleBooleanConditionArgs WithInnerConditions(this global::Pulumi.AzureNative.SecurityInsights.Inputs.AutomationRuleBooleanConditionArgs @selfRef, global::System.Collections.Generic.List<global::System.Object> innerConditions)
    {
        @selfRef.InnerConditions = innerConditions;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.SecurityInsights.Inputs.AutomationRuleBooleanConditionArgs WithInnerConditions(this global::Pulumi.AzureNative.SecurityInsights.Inputs.AutomationRuleBooleanConditionArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::System.Object>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::System.Object>();
        @configure(@list);
        @selfRef.InnerConditions = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.SecurityInsights.Inputs.AutomationRuleBooleanConditionArgs WithInnerConditions(this global::Pulumi.AzureNative.SecurityInsights.Inputs.AutomationRuleBooleanConditionArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::System.Object>> @create)
    {
        @selfRef.InnerConditions = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.SecurityInsights.Inputs.AutomationRuleBooleanConditionArgs WithOperator(this global::Pulumi.AzureNative.SecurityInsights.Inputs.AutomationRuleBooleanConditionArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.SecurityInsights.AutomationRuleBooleanConditionSupportedOperator> @operator)
    {
        @selfRef.Operator = @operator;
        return @selfRef;
    }

}
