// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.StorageCache.Inputs;

namespace Pulumi.AzureNative.StorageCache;

public static partial class NfsAccessRuleArgsExtensions
{
    public static global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs WithAccess(this global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.StorageCache.NfsAccessRuleAccess> access)
    {
        @selfRef.Access = access;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs WithAnonymousGID(this global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs @selfRef, global::System.String anonymousGID)
    {
        @selfRef.AnonymousGID = anonymousGID;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs WithAnonymousUID(this global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs @selfRef, global::System.String anonymousUID)
    {
        @selfRef.AnonymousUID = anonymousUID;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs WithFilter(this global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs @selfRef, global::System.String filter)
    {
        @selfRef.Filter = filter;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs WithRootSquash(this global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs @selfRef, bool rootSquash = true)
    {
        @selfRef.RootSquash = rootSquash;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs WithScope(this global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.StorageCache.NfsAccessRuleScope> scope)
    {
        @selfRef.Scope = scope;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs WithSubmountAccess(this global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs @selfRef, bool submountAccess = true)
    {
        @selfRef.SubmountAccess = submountAccess;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs WithSuid(this global::Pulumi.AzureNative.StorageCache.Inputs.NfsAccessRuleArgs @selfRef, bool suid = true)
    {
        @selfRef.Suid = suid;
        return @selfRef;
    }

}
