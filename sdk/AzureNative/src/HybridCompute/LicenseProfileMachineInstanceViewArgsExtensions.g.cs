// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.HybridCompute.Inputs;

namespace Pulumi.AzureNative.HybridCompute;

public static partial class LicenseProfileMachineInstanceViewArgsExtensions
{
    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs WithEsuProfile(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs @selfRef, global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewEsuPropertiesArgs esuProfile)
    {
        @selfRef.EsuProfile = esuProfile;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs WithEsuProfile(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewEsuPropertiesArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewEsuPropertiesArgs();
        @configure(@item);
        @selfRef.EsuProfile = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs WithProductFeatures(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.HybridCompute.Inputs.ProductFeatureArgs> productFeatures)
    {
        @selfRef.ProductFeatures = productFeatures;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs WithProductFeatures(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.HybridCompute.Inputs.ProductFeatureArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.HybridCompute.Inputs.ProductFeatureArgs>();
        @configure(@list);
        @selfRef.ProductFeatures = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs WithProductFeatures(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.HybridCompute.Inputs.ProductFeatureArgs>> @create)
    {
        @selfRef.ProductFeatures = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs WithProductType(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.HybridCompute.LicenseProfileProductType> productType)
    {
        @selfRef.ProductType = productType;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs WithSoftwareAssuranceCustomer(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs @selfRef, bool softwareAssuranceCustomer = true)
    {
        @selfRef.SoftwareAssuranceCustomer = softwareAssuranceCustomer;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs WithSubscriptionStatus(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseProfileMachineInstanceViewArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.HybridCompute.LicenseProfileSubscriptionStatus> subscriptionStatus)
    {
        @selfRef.SubscriptionStatus = subscriptionStatus;
        return @selfRef;
    }

}
