// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.HybridCompute.Inputs;

namespace Pulumi.AzureNative.HybridCompute;

public static partial class MachineExtensionInstanceViewArgsExtensions
{
    public static global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewArgs WithName(this global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewArgs @selfRef, global::System.String name)
    {
        @selfRef.Name = name;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewArgs WithStatus(this global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewArgs @selfRef, global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewStatusArgs status)
    {
        @selfRef.Status = status;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewArgs WithStatus(this global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewArgs @selfRef, global::System.Action<global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewStatusArgs> @configure)
    {
        var @item = new global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewStatusArgs();
        @configure(@item);
        @selfRef.Status = @item;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewArgs WithType(this global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewArgs @selfRef, global::System.String type)
    {
        @selfRef.Type = type;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewArgs WithTypeHandlerVersion(this global::Pulumi.AzureNative.HybridCompute.Inputs.MachineExtensionInstanceViewArgs @selfRef, global::System.String typeHandlerVersion)
    {
        @selfRef.TypeHandlerVersion = typeHandlerVersion;
        return @selfRef;
    }

}
