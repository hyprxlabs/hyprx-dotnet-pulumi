// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AzureNative.HybridCompute.Inputs;

namespace Pulumi.AzureNative.HybridCompute;

public static partial class LicenseDetailsArgsExtensions
{
    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs WithEdition(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.HybridCompute.LicenseEdition> edition)
    {
        @selfRef.Edition = edition;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs WithProcessors(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs @selfRef, global::System.Int32 processors)
    {
        @selfRef.Processors = processors;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs WithState(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.HybridCompute.LicenseState> state)
    {
        @selfRef.State = state;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs WithTarget(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.HybridCompute.LicenseTarget> target)
    {
        @selfRef.Target = target;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs WithType(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs @selfRef, global::Pulumi.Union<global::System.String, global::Pulumi.AzureNative.HybridCompute.LicenseCoreType> type)
    {
        @selfRef.Type = type;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs WithVolumeLicenseDetails(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs @selfRef, global::System.Collections.Generic.List<global::Pulumi.AzureNative.HybridCompute.Inputs.VolumeLicenseDetailsArgs> volumeLicenseDetails)
    {
        @selfRef.VolumeLicenseDetails = volumeLicenseDetails;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs WithVolumeLicenseDetails(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumi.AzureNative.HybridCompute.Inputs.VolumeLicenseDetailsArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumi.AzureNative.HybridCompute.Inputs.VolumeLicenseDetailsArgs>();
        @configure(@list);
        @selfRef.VolumeLicenseDetails = @list;
        return @selfRef;
    }

    public static global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs WithVolumeLicenseDetails(this global::Pulumi.AzureNative.HybridCompute.Inputs.LicenseDetailsArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumi.AzureNative.HybridCompute.Inputs.VolumeLicenseDetailsArgs>> @create)
    {
        @selfRef.VolumeLicenseDetails = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

}
