// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi.AwsNative.QuickSight.Inputs;

namespace Pulumi.AwsNative.QuickSight;

public static partial class AnalysisGeospatialWindowOptionsArgsExtensions
{
    public static global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialWindowOptionsArgs WithBounds(this global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialWindowOptionsArgs @selfRef, global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialCoordinateBoundsArgs bounds)
    {
        @selfRef.Bounds = bounds;
        return @selfRef;
    }

    public static global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialWindowOptionsArgs WithBounds(this global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialWindowOptionsArgs @selfRef, global::System.Action<global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialCoordinateBoundsArgs> @configure)
    {
        var @item = new global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialCoordinateBoundsArgs();
        @configure(@item);
        @selfRef.Bounds = @item;
        return @selfRef;
    }

    public static global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialWindowOptionsArgs WithMapZoomMode(this global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialWindowOptionsArgs @selfRef, global::Pulumi.AwsNative.QuickSight.AnalysisMapZoomMode mapZoomMode)
    {
        @selfRef.MapZoomMode = mapZoomMode;
        return @selfRef;
    }

    public static global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialWindowOptionsArgs WithMapZoomMode(this global::Pulumi.AwsNative.QuickSight.Inputs.AnalysisGeospatialWindowOptionsArgs @selfRef, global::System.Action<global::Pulumi.AwsNative.QuickSight.AnalysisMapZoomMode> @configure)
    {
        var @item = global::System.Activator.CreateInstance<global::Pulumi.AwsNative.QuickSight.AnalysisMapZoomMode>();
        @configure(@item);
        @selfRef.MapZoomMode = @item;
        return @selfRef;
    }

}
