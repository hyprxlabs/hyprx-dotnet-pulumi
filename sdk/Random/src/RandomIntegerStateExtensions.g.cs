// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

namespace Pulumi.Random;

public static partial class RandomIntegerStateExtensions
{
    public static global::Pulumi.Random.RandomIntegerState WithKeepers(this global::Pulumi.Random.RandomIntegerState @selfRef, global::System.Collections.Generic.Dictionary<string, global::System.String> keepers)
    {
        @selfRef.Keepers = keepers;
        return @selfRef;
    }

    public static global::Pulumi.Random.RandomIntegerState WithKeepers(this global::Pulumi.Random.RandomIntegerState @selfRef, global::System.Action<global::System.Collections.Generic.Dictionary<string, global::System.String>> @configure)
    {
        var @dict = new global::System.Collections.Generic.Dictionary<string, global::System.String>();
        @configure(@dict);
        @selfRef.Keepers = @dict;
        return @selfRef;
    }

    public static global::Pulumi.Random.RandomIntegerState WithKeepers(this global::Pulumi.Random.RandomIntegerState @selfRef, global::System.Func<global::System.Collections.Generic.IDictionary<string, global::System.String>> @create)
    {
        @selfRef.Keepers = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumi.Random.RandomIntegerState WithMax(this global::Pulumi.Random.RandomIntegerState @selfRef, global::System.Int32 max)
    {
        @selfRef.Max = max;
        return @selfRef;
    }

    public static global::Pulumi.Random.RandomIntegerState WithMin(this global::Pulumi.Random.RandomIntegerState @selfRef, global::System.Int32 min)
    {
        @selfRef.Min = min;
        return @selfRef;
    }

    public static global::Pulumi.Random.RandomIntegerState WithResult(this global::Pulumi.Random.RandomIntegerState @selfRef, global::System.Int32 result)
    {
        @selfRef.Result = result;
        return @selfRef;
    }

    public static global::Pulumi.Random.RandomIntegerState WithSeed(this global::Pulumi.Random.RandomIntegerState @selfRef, global::System.String seed)
    {
        @selfRef.Seed = seed;
        return @selfRef;
    }

}
