// <auto-generated/>
// Do not edit any code this file. Create or edit the partial class instead in a different file.

#nullable enable

using Pulumi;

namespace Pulumiverse.Acme;

public static partial class CertificateArgsExtensions
{
    public static global::Pulumiverse.Acme.CertificateArgs WithAccountKeyPem(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.String accountKeyPem)
    {
        @selfRef.AccountKeyPem = accountKeyPem;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithCertTimeout(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Int32 certTimeout)
    {
        @selfRef.CertTimeout = certTimeout;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithCertificateP12Password(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.String certificateP12Password)
    {
        @selfRef.CertificateP12Password = certificateP12Password;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithCertificateRequestPem(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.String certificateRequestPem)
    {
        @selfRef.CertificateRequestPem = certificateRequestPem;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithCommonName(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.String commonName)
    {
        @selfRef.CommonName = commonName;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithDisableCompletePropagation(this global::Pulumiverse.Acme.CertificateArgs @selfRef, bool disableCompletePropagation = true)
    {
        @selfRef.DisableCompletePropagation = disableCompletePropagation;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithDnsChallenges(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Collections.Generic.List<global::Pulumiverse.Acme.Inputs.CertificateDnsChallengeArgs> dnsChallenges)
    {
        @selfRef.DnsChallenges = dnsChallenges;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithDnsChallenges(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::Pulumiverse.Acme.Inputs.CertificateDnsChallengeArgs>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::Pulumiverse.Acme.Inputs.CertificateDnsChallengeArgs>();
        @configure(@list);
        @selfRef.DnsChallenges = @list;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithDnsChallenges(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::Pulumiverse.Acme.Inputs.CertificateDnsChallengeArgs>> @create)
    {
        @selfRef.DnsChallenges = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithHttpChallenge(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::Pulumiverse.Acme.Inputs.CertificateHttpChallengeArgs httpChallenge)
    {
        @selfRef.HttpChallenge = httpChallenge;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithHttpChallenge(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Action<global::Pulumiverse.Acme.Inputs.CertificateHttpChallengeArgs> @configure)
    {
        var @item = new global::Pulumiverse.Acme.Inputs.CertificateHttpChallengeArgs();
        @configure(@item);
        @selfRef.HttpChallenge = @item;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithHttpMemcachedChallenge(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::Pulumiverse.Acme.Inputs.CertificateHttpMemcachedChallengeArgs httpMemcachedChallenge)
    {
        @selfRef.HttpMemcachedChallenge = httpMemcachedChallenge;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithHttpMemcachedChallenge(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Action<global::Pulumiverse.Acme.Inputs.CertificateHttpMemcachedChallengeArgs> @configure)
    {
        var @item = new global::Pulumiverse.Acme.Inputs.CertificateHttpMemcachedChallengeArgs();
        @configure(@item);
        @selfRef.HttpMemcachedChallenge = @item;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithHttpS3Challenge(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::Pulumiverse.Acme.Inputs.CertificateHttpS3ChallengeArgs httpS3Challenge)
    {
        @selfRef.HttpS3Challenge = httpS3Challenge;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithHttpS3Challenge(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Action<global::Pulumiverse.Acme.Inputs.CertificateHttpS3ChallengeArgs> @configure)
    {
        var @item = new global::Pulumiverse.Acme.Inputs.CertificateHttpS3ChallengeArgs();
        @configure(@item);
        @selfRef.HttpS3Challenge = @item;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithHttpWebrootChallenge(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::Pulumiverse.Acme.Inputs.CertificateHttpWebrootChallengeArgs httpWebrootChallenge)
    {
        @selfRef.HttpWebrootChallenge = httpWebrootChallenge;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithHttpWebrootChallenge(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Action<global::Pulumiverse.Acme.Inputs.CertificateHttpWebrootChallengeArgs> @configure)
    {
        var @item = new global::Pulumiverse.Acme.Inputs.CertificateHttpWebrootChallengeArgs();
        @configure(@item);
        @selfRef.HttpWebrootChallenge = @item;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithKeyType(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.String keyType)
    {
        @selfRef.KeyType = keyType;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithMinDaysRemaining(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Int32 minDaysRemaining)
    {
        @selfRef.MinDaysRemaining = minDaysRemaining;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithMustStaple(this global::Pulumiverse.Acme.CertificateArgs @selfRef, bool mustStaple = true)
    {
        @selfRef.MustStaple = mustStaple;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithPreCheckDelay(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Int32 preCheckDelay)
    {
        @selfRef.PreCheckDelay = preCheckDelay;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithPreferredChain(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.String preferredChain)
    {
        @selfRef.PreferredChain = preferredChain;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithProfile(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.String profile)
    {
        @selfRef.Profile = profile;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithRecursiveNameservers(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Collections.Generic.List<global::System.String> recursiveNameservers)
    {
        @selfRef.RecursiveNameservers = recursiveNameservers;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithRecursiveNameservers(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::System.String>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::System.String>();
        @configure(@list);
        @selfRef.RecursiveNameservers = @list;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithRecursiveNameservers(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::System.String>> @create)
    {
        @selfRef.RecursiveNameservers = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithRevokeCertificateOnDestroy(this global::Pulumiverse.Acme.CertificateArgs @selfRef, bool revokeCertificateOnDestroy = true)
    {
        @selfRef.RevokeCertificateOnDestroy = revokeCertificateOnDestroy;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithRevokeCertificateReason(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.String revokeCertificateReason)
    {
        @selfRef.RevokeCertificateReason = revokeCertificateReason;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithSubjectAlternativeNames(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Collections.Generic.List<global::System.String> subjectAlternativeNames)
    {
        @selfRef.SubjectAlternativeNames = subjectAlternativeNames;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithSubjectAlternativeNames(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Action<global::System.Collections.Generic.List<global::System.String>> @configure)
    {
        var @list = new global::System.Collections.Generic.List<global::System.String>();
        @configure(@list);
        @selfRef.SubjectAlternativeNames = @list;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithSubjectAlternativeNames(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Func<global::System.Collections.Generic.IEnumerable<global::System.String>> @create)
    {
        @selfRef.SubjectAlternativeNames = global::Pulumi.Output.Create(@create());
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithTlsChallenge(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::Pulumiverse.Acme.Inputs.CertificateTlsChallengeArgs tlsChallenge)
    {
        @selfRef.TlsChallenge = tlsChallenge;
        return @selfRef;
    }

    public static global::Pulumiverse.Acme.CertificateArgs WithTlsChallenge(this global::Pulumiverse.Acme.CertificateArgs @selfRef, global::System.Action<global::Pulumiverse.Acme.Inputs.CertificateTlsChallengeArgs> @configure)
    {
        var @item = new global::Pulumiverse.Acme.Inputs.CertificateTlsChallengeArgs();
        @configure(@item);
        @selfRef.TlsChallenge = @item;
        return @selfRef;
    }

}
